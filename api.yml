# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /hello:
    get:
      summary: This is just a test endpoint to get you started. Please delete this endpoint.
      operationId: hello
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/HelloResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /login:
    post:
      summary: User login
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /my-profile:
    get:
      summary: Get user's profile
      operationId: getMyProfile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyProfileResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Update user's profile
      operationId: updateMyProfile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMyProfileRequest"
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyProfileResponse"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    RegisterRequest:
      type: object
      required:
        - phoneNumber
        - fullName
        - password
      properties:
        phoneNumber:
          type: string
          minLength: 10
          maxLength: 13
          pattern: "^\\+62[0-9]+$"  # Must start with "+62" and followed by digits
        fullName:
          type: string
          minLength: 3
          maxLength: 60
        password:
          type: string
          minLength: 6
          maxLength: 64
          pattern: "^(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9]).*$"  # Must contain 1 capital, 1 number, and 1 special character
    RegisterResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
    LoginRequest:
      type: object
      required:
        - phoneNumber
        - password
      properties:
        phoneNumber:
          type: string
          minLength: 10
          maxLength: 13
          pattern: "^\\+62[0-9]+$"  # Must start with "+62" and followed by digits
        password:
          type: string
          minLength: 6
          maxLength: 64
    LoginResponse:
      type: object
      required:
        - id
        - jwt
      properties:
        id:
          type: integer
        jwt:
          type: string
    MyProfileResponse:
      type: object
      required:
        - id
        - name
        - phoneNumber
      properties:
        id:
          type: integer
        name:
          type: string
        phoneNumber:
          type: string
    UpdateMyProfileRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          minLength: 10
          maxLength: 13
          pattern: "^\\+62[0-9]+$"  # Must start with "+62" and followed by digits
        fullName:
          type: string
          minLength: 3
          maxLength: 60
        password:
          type: string
          minLength: 6
          maxLength: 64
          pattern: "^(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9]).*$"  # Must contain 1 capital, 1 number, and 1 special character

